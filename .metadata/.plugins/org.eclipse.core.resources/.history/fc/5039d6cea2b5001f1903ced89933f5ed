package com.promineotech;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatThrownBy;
import static org.junit.jupiter.api.Assertions.*;

import java.util.stream.Stream;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

class TestDemoJUnitTest {
	
	private TestDemo testDemo;
	
	@BeforeEach
	void setUp() throws Exception {
	testDemo = new TestDemo();
	
	}

	@ParameterizedTest
	@MethodSource("com.promineotech.TestDemoJUnitTest#argumentsForAddPositive")
	void assertThatTwoPositiveNumbersAreAddedCorrectly(int a, int b, int expected, boolean expectException) {
		if(!expectException) {
			assertThat(TestDemo.addPositive(a,b)).isEqualTo(expected);
		} else {
			assertThatThrownBy(() -> TestDemo.addPositive(a,b)).isInstanceOf(IllegalArgumentException.class);
		}
	}
	
	static Stream<Arguments> argumentsForAddPositive() {
		return Stream.of(
				Arguments.arguments(1,1,2,false),
				Arguments.arguments(2,2,4,false)
				);
				
				
	}
	
	@Test
	void assertThatPairsOfPositiveNumbersAreAddedCorrectly() {
		assertThat(TestDemo.addPositive(2, 5)).isEqualTo(7);
		assertThat(TestDemo.addPositive(1, 1)).isEqualTo(2);
		
	}
	
	@Test
	void assertThatTwoNumbersAreSubtractedCorrectly() {
		assertThat(TestDemo.subtractTwoNumbers(5, 3)).isEqualTo(2);
		assertThat(TestDemo.subtractTwoNumbers(10, 5)).isEqualTo(5);
	}
	
	

}
